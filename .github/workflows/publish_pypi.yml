# This workflow makes a source distribution, downloads wheels built in the Build Wheels workflow and uploads to PyPI
<<<<<<< HEAD
# Wheels will be downloaded from the most recent, successful run of the 'wheels.yml' workflow, on main branch.
=======
# Wheels will be downloaded from the most recent, successful run of the 'wheels.yml' workflow, on 'main' branch.
>>>>>>> origin/main

name: Publish WallGoCollision on PyPI

on:
  workflow_dispatch:
    inputs:
      pypi_target:
        type: choice
        description: Select publishing target (PyPI or TestPyPI)
        required: true
        default: testpypi
        options:
        - pypi
        - testpypi

jobs:

  # Source distribution
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Build SDist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz

<<<<<<< HEAD
  publish_to_TestPyPI:
    needs: make_sdist
    name: Publish to TestPyPI
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/WallGoCollision
=======
  publish_to_PyPI:
    needs: make_sdist
    runs-on: ubuntu-latest

    # Use same environment for both pypi/testpypi uploads
    environment:
      name: pypi
>>>>>>> origin/main

    permissions:
      id-token: write

    steps:
    - name: Download SDist
      uses: actions/download-artifact@v4
      with:
        name: cibw-sdist
        path: dist

    - name: Download built wheels
      uses: dawidd6/action-download-artifact@v6
      with:
        workflow: .github/workflows/wheels.yml
        branch: main
        # Must put everything to dist/ for the pypa publish action to work 
        path: dist
        workflow_conclusion: success
        allow_forks: false

<<<<<<< HEAD
    - name: Unpack build wheels
      # Need to be all on one level
=======
    - name: Move wheels
      # *.whl must be in dist/ directly
>>>>>>> origin/main
      run: |
        cd dist
        ls -l
        mv cibw-wheels-*/*.whl .
        rmdir cibw-wheels-*
        cd ..

    - name: Publish to TestPyPI
      if: ${{ inputs.pypi_target == 'testpypi' }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        repository-url: https://test.pypi.org/legacy/

<<<<<<< HEAD
  publish_to_PyPI:
    needs: [make_sdist, publish_to_TestPyPI]
    name: Publish to PyPI
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/WallGoCollision

    permissions:
      id-token: write

    steps:
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        
=======
    - name: Publish to PyPI
      if: ${{ inputs.pypi_target == 'pypi' }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
>>>>>>> origin/main
